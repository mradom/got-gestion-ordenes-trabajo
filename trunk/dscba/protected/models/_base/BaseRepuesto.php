<?php

/**
 * This is the model base class for the table "repuesto".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Repuesto".
 *
 * Columns in table "repuesto" available as properties of the model,
 * followed by relations of table "repuesto" available as properties of the model.
 *
 * @property integer $id
 * @property string $marca
 * @property string $codigo
 * @property string $detalle
 * @property integer $cantidad
 * @property double $precio_unitario
 * @property integer $tip_id
 *
 * @property TipoRepuesto $tip
 * @property Orden[] $ordens
 */
abstract class BaseRepuesto extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'repuesto';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Repuesto|Repuestos', $n);
	}

	public static function representingColumn() {
		return 'marca';
	}

	public function rules() {
		return array(
			array('marca', 'required'),
			array('cantidad, tip_id', 'numerical', 'integerOnly'=>true),
			array('precio_unitario', 'numerical'),
			array('marca, codigo, detalle', 'length', 'max'=>45),
			array('codigo, detalle, cantidad, precio_unitario, tip_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, marca, codigo, detalle, cantidad, precio_unitario, tip_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'tip' => array(self::BELONGS_TO, 'TipoRepuesto', 'tip_id'),
			'ordens' => array(self::MANY_MANY, 'Orden', 'repuesto_orden(rep_id, ord_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'ordens' => 'RepuestoOrden',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'marca' => Yii::t('app', 'Marca'),
			'codigo' => Yii::t('app', 'Codigo'),
			'detalle' => Yii::t('app', 'Detalle'),
			'cantidad' => Yii::t('app', 'Cantidad'),
			'precio_unitario' => Yii::t('app', 'Precio Unitario'),
			'tip_id' => null,
			'tip' => null,
			'ordens' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('marca', $this->marca, true);
		$criteria->compare('codigo', $this->codigo, true);
		$criteria->compare('detalle', $this->detalle, true);
		$criteria->compare('cantidad', $this->cantidad);
		$criteria->compare('precio_unitario', $this->precio_unitario);
		$criteria->compare('tip_id', $this->tip_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}